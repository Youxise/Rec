name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Déclenche le workflow quand du code est poussé sur main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: rec_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: localhost
      DB_NAME: rec_db

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Create Database Schema and Insert Data
        run: python db_setup.py

      - name: Run Tests
        run: pytest
        
  deploy:
    needs: build  # Exécute après le job "build"
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to server
        run: echo "Déploiement en cours..."  # Ajoute ici la vraie commande de déploiement
